services:
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://54.226.65.148:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      # KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      # KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      # KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      # KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CLUSTER_ID: 'EmptNWtoR4GGWx-BH6nGLQ'
      # KAFKA_LOG_DIRS: "e:/kafka/logs"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 54.92.162.91:9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    # volumes:
    #   - kafka-data:/var/lib/kafka/data
      
  redis-devices:
    image: redis:latest
    container_name: redis-devices
    restart: always
    command: redis-server --requirepass rW3QFwzpiMyYqCZg}
    ports:
      - "6379:6379"
    # volumes:
    #   - redis-devices:/data

  redis-anomalies:
    image: redis:latest
    container_name: redis-anomalies
    restart: always
    command: redis-server --requirepass rW3QFwzpiMyYqCZg}
    ports:
      - "6380:6379"
    # volumes:
    #  - redis-anomalies:/data

  redis-log:
    image: redis:latest
    container_name: redis-log
    restart: always
    command: redis-server --requirepass rW3QFwzpiMyYqCZg}
    ports:
      - "6381:6379"
    # volumes:
    #   - redis-log:/data

  dispatcher:
    build: ./dispatcher
    image: myapp/dispatcher:1.0.0
    container_name: dispatcher
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka:29092
    depends_on:
      - kafka

  ai_agent:
    build: ./ai_agent
    image: myapp/ai_agent:1.0.0
    container_name: ai_agent
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka:29092
      - REDIS_PASSWORD=rW3QFwzpiMyYqCZg}
    depends_on:
      - kafka

  packets_server:
    build: ./packets_server
    image: myapp/packets_server:1.0.0
    container_name: packets_server
    restart: always
    environment:
      - KAFKA_BROKER_URL=kafka:29092
      - REDIS_PASSWORD=rW3QFwzpiMyYqCZg}
    depends_on:
      - kafka

# volumes:
#   kafka-data:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: e:/kafka/data # Specify the drive and path

#   redis-devices:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: e:/redis/devices # Specify the drive and path

#   redis-anomalies:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: e:/redis/anomalies # Specify the drive and path

#   redis-log:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: e:/redis/log # Specify the drive and path